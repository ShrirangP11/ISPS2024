}
}
t1_error = c(t1_error, count/1000)
}
exp_prb = c(0.3, 0.2, 0.4, 0.1)
m = 1000
blood_grp <- c("O", "A", "B", "AB")
df = 3
ss = seq(500, 5000, 500)
t1_error = c()
for (i in ss) {
count = 0
for (j in 1:m){
sam <- sample(blood_grp, i , TRUE, exp_prb)
x <- table(sam)
exp_freq <- exp_prb * i
chi_sq = ((as.vector(x[blood_grp]) - exp_freq)**2)/exp_freq
chi_sq_st = sum(chi_sq)
if (chi_sq_st > qchisq(0.05,df,lower.tail = F) ){
count = count + 1
}
}
t1_error = c(t1_error, count/1000)
}
plot(ss, t1_error)
plot(ss, t1_error, type= "l")
rm(list = ls())
exp_prb = c(0.3, 0.2, 0.4, 0.1)
m = 1000
blood_grp <- c("O", "A", "B", "AB")
df = 3
ss = seq(500, 50000, 500)
t1_error = c()
for (i in ss) {
count = 0
for (j in 1:m){
sam <- sample(blood_grp, i , TRUE, exp_prb)
x <- table(sam)
exp_freq <- exp_prb * i
chi_sq = ((as.vector(x[blood_grp]) - exp_freq)**2)/exp_freq
chi_sq_st = sum(chi_sq)
if (chi_sq_st > qchisq(0.05,df,lower.tail = F) ){
count = count + 1
}
}
t1_error = c(t1_error, count/1000)
}
plot(ss, t1_error, type= "l")
plot(ss[-1], t1_error, type= "l")
plot(seq(500, 25500,500), t1_error, type= "l")
plot(seq(500, 25000,500), t1_error, type= "l")
rm(list = ls())
exp_prb = c(0.3, 0.2, 0.4, 0.1)
m = 1000
blood_grp <- c("O", "A", "B", "AB")
df = 3
ss = seq(500, 50000, 500)
t1_error = c()
for (i in ss) {
count = 0
for (j in 1:m){
sam <- sample(blood_grp, i , TRUE, exp_prb)
x <- table(sam)
exp_freq <- exp_prb * i
chi_sq = ((as.vector(x[blood_grp]) - exp_freq)**2)/exp_freq
chi_sq_st = sum(chi_sq)
if (chi_sq_st > qchisq(0.05,df,lower.tail = F) ){
count = count + 1
}
}
t1_error = c(t1_error, count/1000)
}
plot(ss, t1_error, type= "l")
min(t1_error)
max(t1_error)
?hist()
data <- rnorm(1000)
# Plot frequency histogram
hist(data, freq = TRUE, main = "Frequency Histogram")
# Plot density histogram
hist(data, freq = FALSE, main = "Density Histogram")
# Plot frequency histogram
hist(data, freq = TRUE, main = "Frequency Histogram")
# Plot density histogram
hist(data, freq = FALSE, main = "Density Histogram")
# Plot frequency histogram
hist(data, freq = TRUE, main = "Frequency Histogram")
# Plot density histogram
hist(data, freq = FALSE, main = "Density Histogram")
hist(data, freq = TRUE, main = "Frequency Histogram")
hist(data, freq = FALSE, main = "Density Histogram")
?hist()
rm(list=ls())
rm(list=ls())
range1 <- seq(1,500, 5)
range1 <- seq(500, 5)
range1 <- seq(1,500, 4)
range1 <- seq(0,500, 5)
range1[1] = 1
range1 <- seq(0,500, 5)
range1[1] = 1
xbar = c()
for (i in range1){
xbar = append(xbar, mean(sam)
}
for (i in range1){
sam = rnorm(i, 5, sqrt(2))
xbar = append(xbar, mean(sam))
}
plot(range1, xbar)
eps = 0.05
abline(h = 5+eps, col = "blue")
abline(h = 5-eps, col = "blue")
range1 <- seq(0,5000, 5)
range1[1] = 1
xbar = c()
eps = 0.05
for (i in range1){
sam = rnorm(i, 5, sqrt(2))
xbar = append(xbar, mean(sam))
}
plot(range1, xbar)
abline(h = 5+eps, col = "blue")
abline(h = 5-eps, col = "blue")
range1 <- seq(0,10000, 5)
range1[1] = 1
xbar = c()
eps = 0.05
for (i in range1){
sam = rnorm(i, 5, sqrt(2))
xbar = append(xbar, mean(sam))
}
plot(range1, xbar)
abline(h = 5+eps, col = "blue")
abline(h = 5-eps, col = "blue")
rm(list = ls())
# modelling for values till 2013
library(ismev)
library(evd)
library(extRemes)
library(ggplot2)
library(ggpubr)
setwd('C:\\Users\\admin\\Documents\\GitHub\\ISPS2024')
date_series <- seq(as.Date("1951-01-01"), as.Date("2013-12-31"), by = "day")
data<-read.csv('daily_rainfall_pune.csv',header=FALSE)
values<-unlist(data[1, length(date_series)], use.names=F)
x<-ts(data[1, length(date_series)],freq=365)
lenght(data[1:length(date_series)])
length(data[1:length(date_series)])
values<-unlist(data[1, length(date_series)], use.names=F)
values<-unlist(data[1, length(date_series)], use.names=F)
values<-unlist(data[1,], use.names=F)
type(values)
class(values)
x<-ts(values[1, length(date_series)],freq=365)
x<-ts(values[1,],freq=365)
x<-ts(values,freq=365)
year<-c(1:61)
annual_maximum <- as.numeric(aggregate(x, FUN=max))
rm(list = ls())
# modelling for values till 2013
library(ismev)
library(evd)
library(extRemes)
library(ggplot2)
library(ggpubr)
setwd('C:\\Users\\admin\\Documents\\GitHub\\ISPS2024')
date_series <- seq(as.Date("1951-01-01"), as.Date("2013-12-31"), by = "day")
data<-read.csv('daily_rainfall_pune.csv',header=FALSE)
values<-unlist(data[1,], use.names=F)
x<-ts(values,freq=365)
x<-?ts(values,freq=365)
values<-unlist(data[1,length(date_series)], use.names=F)
values<-unlist(data[1,], use.names=F)
x<-ts(values,freq=365)
year<-c(1:61)
annual_maximum <- as.numeric(aggregate(x, FUN=max))
annual_maximum <- as.numeric(aggregate(x[1,length(date_series)], FUN=max))
values1 <- values[1:23011]
values1 <- values[1:length(date_series)]
x<-ts(values1,freq=365)
year<-c(1:61)
annual_maximum <- as.numeric(aggregate(x, FUN=max))
GEV00 <- fevd(annual_maximum, type=c('GEV'), units='mm')
plot(annual_maximum, type = "l")
(GEV00_rl = return.level(GEV00, return.period = c(5, 10, 20,50)))
return_levels = c(373.1699, 417.4389, 464.2633, 531.9267)
shade = c("red", "blue", "purple", "green")
for (n in seq(0,3)){
abline(h = return_levels[n], col = shade[n])
}
plot(annual_maximum, type = "l")
for (n in seq(1,4)){
abline(h = return_levels[n], col = shade[n])
}
legend("topright", legend = paste(c(5, 10, 20, 50), "year return period"),
col = shade, lty = 1, cex = 0.8)
legend("topright", legend = paste(c(5, 10, 20, 50), "year return level"),
col = shade, lty = 1, cex = 0.8)
plot(annual_maximum, type = "l")
for (n in seq(1,4)){
abline(h = return_levels[n], col = shade[n])
}
legend("topright", legend = paste(c(5, 10, 20, 50), "year return level"),
col = shade, lty = 1, cex = 0.8)
legend("topleft", legend = paste(c(5, 10, 20, 50), "year return level"),
col = shade, lty = 1, cex = 0.8)
plot(annual_maximum, type = "l")
for (n in seq(1,4)){
abline(h = return_levels[n], col = shade[n])
}
legend("topleft", legend = paste(c(5, 10, 20, 50), "year return level"),
col = shade, lty = 1, cex = 0.8)
values2 <- values[length(date_series) + 1,]
values2 <- values[length(date_series) + 1:]
values2 <- values[length(date_series) + 1: 26663]
GEV00 <- fevd(annual_maximum, type=c('GEV'), units='mm')
plot(annual_maximum, type = "l")
(GEV00_rl = return.level(GEV00, return.period = c(2, 5, 10)))
return_levels = c(314.1491, 373.1699, 417.4389)
for (n in seq(1,3)){
abline(h = return_levels[n], col = shade[n])
}
legend("topleft", legend = paste(c(5, 10, 20, 50), "year return level"),
col = shade, lty = 1, cex = 0.8)
plot(annual_maximum, type = "l")
for (n in seq(1,3)){
abline(h = return_levels[n], col = shade[n])
}
legend("topleft", legend = paste(c(2,5,10), "year return level"),
col = shade, lty = 1, cex = 0.8)
date_series2 <- seq(as.Date("2014-01-01"), as.Date("2015-12-31"), by = "day")
date_series5 <- seq(as.Date("2014-01-01"), as.Date("2018-12-31"), by = "day")
date_series10 <- seq(as.Date("2014-01-01"), as.Date("2023-12-31"), by = "day")
l = length(date_series)
date_series <- seq(as.Date("1951-01-01"), as.Date("2013-12-31"), by = "day")
l = length(date_series)
date_series2 <- seq(as.Date("2014-01-01"), as.Date("2015-12-31"), by = "day")
l2 = length(date_series2)
date_series5 <- seq(as.Date("2014-01-01"), as.Date("2018-12-31"), by = "day")
l5 = length(date_series5)
date_series10 <- seq(as.Date("2014-01-01"), as.Date("2023-12-31"), by = "day")
l10 = length(date_series10)
values2 <- values[l + 1 : l2]
values5 <- values[l + 1 : l5]
values10 <- values[l + 1 : l10]
rm(list=ls())
# modelling for values till 2013, stationary POt
library(ismev)
library(evd)
library(extRemes)
library(ggplot2)
library(ggpubr)
setwd('C:\\Users\\admin\\Documents\\GitHub\\ISPS2024')
data = read.csv("daily_rainfall.csv",header = FALSE)
setwd('C:\\Users\\admin\\Documents\\GitHub\\ISPS2024')
data = read.csv("daily_rainfall.csv",header = FALSE)
data = read.csv("daily_rainfall.csv",header = FALSE)
# modelling for values till 2013, stationary POt
library(ismev)
library(evd)
library(extRemes)
library(ggplot2)
library(ggpubr)
setwd('C:\\Users\\admin\\Documents\\GitHub\\ISPS2024')
data = read.csv("daily_rainfall.csv",header = FALSE)
data = read.csv("daily_rainfall_pune.csv",header = FALSE)
data = read.csv("daily_rainfall_pune.csv",header = FALSE)
date_series <- seq(as.Date("1951-01-01"), as.Date("2013-12-31"), by = "day")
l = length(date_series)
GP00 <- fevd(data[1,] ,threshold = 204.5, type=c('GP'), units='mm')
GP00 <- fevd(data[1,l] ,threshold = 204.5, type=c('GP'), units='mm')
GP00 <- fevd(data[1,l] ,threshold = 204.5, type=c('GP'), units='mm')
?fevd
GP00 <- fevd(data[1,l] ,threshold = 204.5, type=c('GP'), units='mm', use.phi = FALSE)
d = as.data.frame(t(data))
rf_series <- data.frame(
Date = date_series,
Value = d$V1
)
GP00 <- fevd(d$V1 ,threshold = 204.5, type=c('GP'), units='mm', use.phi = FALSE)
plot(GP1,type=c('rl'), rperiods = c(2,5,10),period='year',main='Return Level')
plot(GP00,type=c('rl'), rperiods = c(2,5,10),period='year',main='Return Level')
(GP00_rl = return.level(GP00, return.period = c(2,5,10)))
(GP00_rl = return.level(GP00, return.period = c(2,4,6,8,10)))
plot(GP00,type=c('rl'), rperiods = c(2,4,6,8,10),period='year',main='Return Level')
plot(GP00,type=c('density'), rperiods = c(2,4,6,8,10),period='year',main='Return Level')
plot(GP00,type=c('rl'), rperiods = c(2,4,6,8,10),period='year',main='Return Level')
plot(GP00)
plot(GP00, type="l")
plot(GP00, type="Zplot")
plot(GP00, type="primary")
plot(GP00, type="rl")
plot(GP00, type="trace")
(GP00_rl = return.level(GP00, return.period = c(2,4,6,8,10)))
GP00 <- fevd(d$V1 ,threshold = 204.5, type=c('GP'), units='mm', use.phi = FALSE)
plot(GP00,type=c('rl'), rperiods = c(2,5,10),period='year',main='Return Level')
(GP00_rl = return.level(GP00, return.period = c(2,5,10)))
GP00_rl[1]
prb <- c(1/2, 1/5, 1/10)
pot2 <- c()
pot2 <- rf_series$Value[rf_series$Date >= as.Date("2014-01-01") &
rf_series$Date <= as.Date("2015-12-31") &
rf_series$Value >= 204.5]
d = as.data.frame(t(data))
rf_series <- data.frame(
Date = date_series,
Value = d$V1
)
pot2 <- rf_series$Value[rf_series$Date >= as.Date("2014-01-01") &
rf_series$Date <= as.Date("2015-12-31") &
rf_series$Value >= 204.5]
rf_series <- data.frame(
Date = date_series,
Value = d$V1
)
rf_series <- data.frame(
Date = date_series,
Value = d$V1[1:23011]
)
pot2 <- rf_series$Value[rf_series$Date >= as.Date("2014-01-01") &
rf_series$Date <= as.Date("2015-12-31") &
rf_series$Value >= 204.5]
rv2 <- pot2[pot2 >= 351.2727]
pot2
pot2 <- rf_series$Value[
rf_series$Date >= as.Date("2014-01-01") &
rf_series$Date <= as.Date("2015-12-31") &
rf_series$Value >= 204.5]
pot2 <- rf_series$Value[
rf_series$Date >= as.Date("2014-01-01")]
rv2 <- pot2[pot2 >= 351.2727]
pot2 <- rf_series$Value[
rf_series$Date >= Date("2014-01-01")]
pot2 <- rf_series$Value[
rf_series$Date >= Date["2014-01-01"]]
pot2 <- rf_series$Value[
rf_series$Date >= rf_series$Date["2014-01-01"]]
pot2 <- rf_series$Value[
rf_series$Date >= as.Date.numeric("2014-01-01") &
rf_series$Date <= as.Date.numeric("2015-12-31") &
rf_series$Value >= 204.5]
rv2 <- pot2[pot2 >= 351.2727]
pot2
pot2 <- rf_series$Value[
rf_series$Date >= as.Date("2014-01-01") &
rf_series$Date <= as.Date("2015-12-31") &
rf_series$Value >= 204.5]
rf_series$Date.head()
(rf_series$Date).head()
rf_series$Date
rf_series$Date >= as.Date("2023-05-31")
rf_series$Date >= "2023-05-31"
print(rf_series$Date)
if (rf_series$Date >= "2023-05-31"){
print(rf_series$Date)
}
print(rf_series$Date[rf_series$Date >= as.Date("2014-01-01")])
pot2 <- rf_series$Value[
rf_series$Date >= as.numeric(as.Date("2014-01-01")) &
rf_series$Date <= as.numeric(as.Date("2015-12-31")) &
rf_series$Value >= 204.5]
pot2 <- rf_series$Value[
rf_series$Date >= as.numeric(as.Date("2014-01-01")) &
rf_series$Date <= as.numeric(as.Date("2015-12-31")) &
rf_series$Value >= 204.5]
# Ensure the Date column is of Date type
rf_series$Date <- as.Date(rf_series$Date)
# Convert the dates to numeric for comparison
start_date <- as.numeric(as.Date("2014-01-01"))
end_date <- as.numeric(as.Date("2015-12-31"))
# Filter the data using which() with numeric comparison
pot2 <- rf_series$Value[
which(as.numeric(rf_series$Date) >= start_date &
as.numeric(rf_series$Date) <= end_date &
rf_series$Value >= 204.5)
]
# Filter the data using which() with numeric comparison
pot2 <- rf_series$Value[
which(as.numeric(rf_series$Date) >= start_date &
as.numeric(rf_series$Date) <= end_date &
rf_series$Value >= 204.5)
]
library(dplyr)
filtered_data <- rf_series %>%
filter(Date >= as.Date("2014-01-01") &
Date <= as.Date("2015-12-31") &
Value >= 204.5)
# Extract the rainfall values into the pot2 vector
pot2 <- filtered_data$Value
# Output the pot2 vector
pot2
rf_series$Value[rf_series$Value >=400]
pot2 <- rf_series$Value[
rf_series$Date in date_series &
pot2 <- rf_series$Value[
rf_series$Date %in% date_series &
rf_series$Value >= 204.5]
rv2 <- pot2[pot2 >= 351.2727]
emp2 <- length(rv2)/length(pot2)
(emp2 <- length(rv2)/length(pot2))
GP00 <- fevd(d$V1 ,threshold = 204.5, type=c('GP'), units='mm', use.phi = FALSE)
(GP00_rl = return.level(GP00, return.period = c(2,5,10)))
pot2 <- rf_series$Value[
rf_series$Date %in% date_series &
rf_series$Value >= 204.5]
rv2 <- pot2[pot2 >= 351.2727]
pot2 <- rf_series$Value[
rf_series$Date %in% date_series2 &
rf_series$Value >= 204.5]
date_series2 <- seq(as.Date("2014-01-01"), as.Date("2015-12-31"), by = "day")
pot2 <- rf_series$Value[
rf_series$Date %in% date_series2 &
rf_series$Value >= 204.5]
pot2 <- rf_series$Value[
rf_series$Date %in% date_series &
rf_series$Value >= 204.5]
pot2 <- rf_series$Value[
rf_series$Date %in% date_series2 &
rf_series$Value >= 204.5]
date_series2 <- seq(as.Date("2014-01-01"), as.Date("2015-12-31"), by = "day")
date_series <- seq(as.Date("1951-01-01"), as.Date("2023-12-31"), by = "day")
rf_series <- data.frame(
Date = date_series,
Value = d$V1
)
GP00 <- fevd(d$V1[1:23011] ,threshold = 204.5, type=c('GP'), units='mm', use.phi = FALSE)
plot(GP00,type=c('rl'), rperiods = c(2,5,10),period='year',main='Return Level')
(GP00_rl = return.level(GP00, return.period = c(2,5,10)))
GP00 <- fevd(Value[1:23011] ,threshold = 204.5, type=c('GP'), units='mm', use.phi = FALSE)
rf_series <- data.frame(
Date = date_series,
Value = d$V1
)
GP00 <- fevd(Value[1:23011] ,threshold = 204.5, type=c('GP'), units='mm', use.phi = FALSE)
GP00 <- fevd(rf_series$Value[1:23011] ,threshold = 204.5, type=c('GP'), units='mm', use.phi = FALSE)
plot(GP00,type=c('rl'), rperiods = c(2,5,10),period='year',main='Return Level')
plot(GP00,type=c('rl'), rperiods = c(2,5,10),period='year',main='Return Level')
rf_series <- data.frame(
Date = date_series,
Value = t(data)
)
GP00 <- fevd(rf_series$Value[1:23011] ,threshold = 204.5, type=c('GP'), units='mm', use.phi = FALSE)
plot(GP00,type=c('rl'), rperiods = c(2,5,10),period='year',main='Return Level')
View(rf_series)
GP00 <- fevd(data[1:23011] ,threshold = 204.5, type=c('GP'), units='mm', use.phi = FALSE)
GP00 <- fevd(data[1,:23011] ,threshold = 204.5, type=c('GP'), units='mm', use.phi = FALSE)
GP00 <- fevd(data[1,1:23011] ,threshold = 204.5, type=c('GP'), units='mm', use.phi = FALSE)
GP00 <- fevd(rf_series$[1:23011] ,threshold = 204.5, type=c('GP'), units='mm', use.phi = FALSE)
plot(GP00,type=c('rl'), rperiods = c(2,5,10),period='year',main='Return Level')
plot(GP00,type=c('qq'), rperiods = c(2,5,10),period='year',main='Return Level')
plot(GP00,type=c('rl'), rperiods = c(2,5,10),period='year',main='Return Level')
(GP00_rl = return.level(GP00, return.period = c(2,5,10)))
pot2 <- rf_series$Value[
rf_series$Date %in% date_series2 &
rf_series$Value >= 204.5]
rv2 <- pot2[pot2 >= 351.2727]
rm(list=ls())
library(ismev)
library(evd)
library(extRemes)
library(ggplot2)
library(ggpubr)
library(dplyr)
setwd('C:\\Users\\admin\\Documents\\GitHub\\ISPS2024')
data = read.csv("daily_rainfall_pune.csv",header = FALSE)
date_series <- seq(as.Date("1951-01-01"), as.Date("2023-12-31"), by = "day")
l = length(date_series)
date_series2 <- seq(as.Date("2014-01-01"), as.Date("2015-12-31"), by = "day")
l2 = length(date_series2)
date_series5 <- seq(as.Date("2014-01-01"), as.Date("2018-12-31"), by = "day")
l5 = length(date_series5)
date_series10 <- seq(as.Date("2014-01-01"), as.Date("2023-12-31"), by = "day")
l10 = length(date_series10)
rf_series <- data.frame(
Date = date_series,
Value = t(data)
)
GP00 <- fevd(rf_series$[1:23011] ,threshold = 204.5, type=c('GP'), units='mm', use.phi = FALSE)
GP00 <- fevd(rf_series$[1:23011] ,threshold = 204.5, type=c('GP'), units='mm', use.phi = FALSE)
GP00 <- fevd(rf_series$Value[1:23011] ,threshold = 204.5, type=c('GP'), units='mm', use.phi = FALSE)
plot(GP00,type=c('rl'), rperiods = c(2,5,10),period='year',main='Return Level')
(GP00_rl = return.level(GP00, return.period = c(2,5,10)))
pot2 <- rf_series$Value[
rf_series$Date %in% date_series2 &
rf_series$Value >= 204.5]
View(rf_series)
pot2
# for 5 year return level
pot5 <- rf_series$Value[
rf_series$Date %in% date_series5 &
rf_series$Value >= 204.5]
pot5
rv5 <- pot5[pot5 >= 393.0517]
(emp5 <- length(rv5)/length(pot5))
# for 10 year return level
pot10 <- rf_series$Value[
rf_series$Date %in% date_series10 &
rf_series$Value >= 204.5]
pot10
rv10 <- pot10[pot10 >= 393.0517]
(emp10 <- length(rv10)/length(pot10))
date_series <- seq(as.Date("1951-01-01"), as.Date("2013-12-31"), by = "day")
len(date_series)
length(date_series)
date_series <- seq(as.Date("1951-01-01"), as.Date("2023-12-31"), by = "day")
(GP00_rl = return.level(GP00, return.period = c(2,5,10)))
# for 10 year return level
pot10 <- rf_series$Value[
rf_series$Date %in% date_series10 &
rf_series$Value >= 204.5]
rv10 <- pot10[pot10 >= 393.0517]
