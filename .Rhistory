daily_rainfall[1,10]
daily_rainfall[1,14]
values = daily_rainfall[1,]
View(data)
View(data)
length(values)
length(values)
daily_rainfall <- read.csv("~/GitHub/ISPS2024/daily_rainfall.csv", header=FALSE)
View(daily_rainfall)
data<-read.csv('daily_rainfall.csv',header=FALSE)
values<-data[1,]
length(values)
x<-ts(vakues,freq=365)
aggregate(x, FUN=max)
x<-ts(values,freq=365)
aggregate(x, FUN=max)
x
values[1:5]
values[14]
values<-unlist(data[1,], use.names=F)
values[1:15]
length(values)
x<-ts(values,freq=365)
aggregate(x, FUN=max)
aggregate(x, FUN=max)$values
x[1]
annual_maximum <- aggregate(x, FUN=max)
annual_maximum
class(annual_maximum)
?ts()
plot(annual_maximum)
length(annual_maximum)
2023-1951
annual_maximum <- as.numeric(aggregate(x, FUN=max))
plot(annual_maximum)
annual_maximum
plot(annual_maximum,type='l')
year = c(1951:2023)
plot(x=year,y=annual_maximum,type='l')
year
#Modelling non-statinarity in Block maxima
install.packages('ismev')
#Modelling non-statinarity in Block maxima
# install.packages('ismev')
library(ismev)
gev.fit(annual_maximum,ydat=NULL)
gev.diag(annual_maximum)
gev.diag(stat)
stat<-gev.fit(annual_maximum,ydat=NULL)
gev.diag(stat)
plot(x=year,y=annual_maximum,type='l')
plot(x=year,y=annual_maximum,type='l')
lines(annual_maximum~year)
plot(x=year,y=annual_maximum,type='l')
abline(lm(annual_maximum~year))
plot(x=year,y=annual_maximum,type='l',ylab='Annual Maximum Rainfall(mm)',xlab='Year')
fit <- lm(annual_maximum~year)
summary(fit)
plot(x=year,y=annual_maximum,type='l',ylab='Annual Maximum Rainfall(mm)',xlab='Year')
abline(coef(fit)[1:2])
## sign check to avoid having plus followed by minus for negative coefficients
eq <- paste0("mpg = ", cf[1],
ifelse(sign(cf[2])==1, " + ", " - "), abs(cf[2]), " cyl ",
ifelse(sign(cf[3])==1, " + ", " - "), abs(cf[3]), " hp")
## printing of the equation
mtext(eq, 3, line=-2)
cf <- round(coef(fit), 2)
## sign check to avoid having plus followed by minus for negative coefficients
eq <- paste0("mpg = ", cf[1],
ifelse(sign(cf[2])==1, " + ", " - "), abs(cf[2]), " cyl ",
ifelse(sign(cf[3])==1, " + ", " - "), abs(cf[3]), " hp")
## printing of the equation
mtext(eq, 3, line=-2)
library(ggplot2)
df <- data.frame(x=year,y=annual_maximum)
ggplot(data=df, aes(x=x, y=y)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=30, label.y=310) +
stat_cor(aes(label=..rr.label..), label.x=30, label.y=290)
library(ggpubr)
ggplot(data=df, aes(x=x, y=y)) +
geom_smooth(method="lm") +
geom_point() +
stat_regline_equation(label.x=30, label.y=310) +
stat_cor(aes(label=..rr.label..), label.x=30, label.y=290)
ggplot(data=df, aes(x=x, y=y)) +
geom_smooth(method="lm") +
geom_line() +
stat_regline_equation(label.x=30, label.y=310) +
stat_cor(aes(label=..rr.label..), label.x=30, label.y=290)
ggplot(data=df, aes(x=x, y=y)) +
geom_smooth(method="lm") +
geom_line() +
stat_regline_equation(label.x=2000, label.y=500) +
stat_cor(aes(label=..rr.label..), label.x=2000, label.y=500)
ggplot(data=df, aes(x=x, y=y)) +
geom_smooth(method="lm") +
geom_line() +
stat_regline_equation(label.x=1980, label.y=500) +
stat_cor(aes(label=..rr.label..), label.x=2000, label.y=500)
ggplot(data=df, aes(x=x, y=y)) +
geom_smooth(method="lm") +
geom_line() +
stat_regline_equation(label.x=1970, label.y=600) +
stat_cor(aes(label=..rr.label..), label.x=2000, label.y=500)
ggplot(data=df, aes(x=x, y=y)) +
geom_smooth(method="lm") +
geom_line() +
stat_regline_equation(label.x=1960, label.y=600) +
stat_cor(aes(label=..rr.label..), label.x=2000, label.y=500)
ggplot(data=df, aes(x=x, y=y)) +
geom_smooth(method="lm") +
geom_line() +
stat_regline_equation(label.x=1960, label.y=600) +
stat_cor(aes(label=..rr.label..), label.x=1960, label.y=500)
ggplot(data=df, aes(x=x, y=y)) +
geom_smooth(method="lm") +
geom_line() +
stat_regline_equation(label.x=1960, label.y=600) +
stat_cor(aes(label=..rr.label..), label.x=1960, label.y=5900)
ggplot(data=df, aes(x=x, y=y)) +
geom_smooth(method="lm") +
geom_line() +
stat_regline_equation(label.x=1960, label.y=600) +
stat_cor(aes(label=..rr.label..), label.x=1960, label.y=590)
ggplot(data=df, aes(x=x, y=y)) +
geom_smooth(method="lm") +
geom_line() +
stat_regline_equation(label.x=1960, label.y=600) +
stat_cor(aes(label=..rr.label..), label.x=1960, label.y=570)
ggplot(data=df, aes(x=x, y=y)) +
geom_smooth(method="lm") +
geom_line() +
xlab('Year') +
ylab('Annual Max Rainfall(mm)')
ggplot(data=df, aes(x=x, y=y)) +
geom_smooth(method="lm") +
geom_line() +
xlab('Year') +
ylab('Annual Max Rainfall(mm)') +
stat_regline_equation(label.x=1960, label.y=600) +
stat_cor(aes(label=..rr.label..), label.x=1960, label.y=570)
ggplot(data=df, aes(x=x, y=y)) +
geom_smooth(method="lm") +
geom_line() +
xlab('Year') +
ylab('Annual Max Rainfall(mm)') +
stat_regline_equation(label.x=1960, label.y=600,size=4) +
stat_cor(aes(label=..rr.label..), label.x=1960, label.y=570)
ggplot(data=df, aes(x=x, y=y)) +
geom_smooth(method="lm") +
geom_line() +
xlab('Year') +
ylab('Annual Max Rainfall(mm)') +
stat_regline_equation(label.x=1960, label.y=600,size=8) +
stat_cor(aes(label=..rr.label..), label.x=1960, label.y=570)
ggplot(data=df, aes(x=x, y=y)) +
geom_smooth(method="lm") +
geom_line() +
xlab('Year') +
ylab('Annual Max Rainfall(mm)') +
stat_regline_equation(label.x=1960, label.y=600,size=5) +
stat_cor(aes(label=..rr.label..), label.x=1960, label.y=570)
ggplot(data=df, aes(x=x, y=y)) +
geom_smooth(method="lm") +
geom_line() +
xlab('Year') +
ylab('Annual Max Rainfall(mm)') +
stat_regline_equation(label.x=1960, label.y=600,size=6) +
stat_cor(aes(label=..rr.label..), label.x=1960, label.y=570)
ggplot(data=df, aes(x=x, y=y)) +
geom_smooth(method="lm") +
geom_line() +
xlab('Year') +
ylab('Annual Max Rainfall(mm)') +
stat_regline_equation(label.x=1960, label.y=600,size=6) +
stat_cor(aes(label=..rr.label..), label.x=1960, label.y=570,size=6)
ggplot(data=df, aes(x=x, y=y)) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10))
ggplot(data=df, aes(x=x, y=y)) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
geom_smooth(method="lm") +
geom_line() +
xlab('Year') +
ylab('Annual Max Rainfall(mm)') +
stat_regline_equation(label.x=1960, label.y=600,size=6) +
stat_cor(aes(label=..rr.label..), label.x=1960, label.y=570,size=6)
stat<-gev.fit(annual_maximum,ydat=NULL)
gev.diag(stat)
ti<-matrix(ncol=1, nrow=73)
ti[,1]<-seq(1,73,1)
ti
nstat<-gev.fit(annual_maximum,ydat=ti,mul=1)
ti[,1]<-seq(1951,2023,1)
nstat<-gev.fit(annual_maximum,ydat=ti,mul=1)
#Non-Stationary model
ti<-matrix(ncol=1, nrow=73)
ti[,1]<-seq(1951,2023,1)
nstat<-gev.fit(annual_maximum,ydat=ti,mul=1)
#Non-Stationary model
ti<-matrix(ncol=1, nrow=73)
ti[,1]<-seq(1,73,1)
nstat<-gev.fit(annual_maximum,ydat=ti,mul=1)
year<-c(1:73)
df<-data.frame(x=year,y=annual_maximum)
ggplot(data=df, aes(x=x, y=y)) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
geom_smooth(method="lm") +
geom_line() +
xlab('Year') +
ylab('Annual Max Rainfall(mm)') +
stat_regline_equation(label.x=1960, label.y=600,size=6) +
stat_cor(aes(label=..rr.label..), label.x=1960, label.y=570,size=6)
ggplot(data=df, aes(x=x, y=y)) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
geom_smooth(method="lm") +
geom_line() +
xlab('Year') +
ylab('Annual Max Rainfall(mm)') +
stat_regline_equation(label.x=20, label.y=600,size=6) +
stat_cor(aes(label=..rr.label..), label.x=20, label.y=570,size=6)
ggplot(data=df, aes(x=x, y=y)) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 10)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 10)) +
geom_smooth(method="lm",formula=y~x) +
geom_line() +
xlab('Year') +
ylab('Annual Max Rainfall(mm)') +
stat_regline_equation(label.x=20, label.y=600,size=6) +
stat_cor(aes(label=..rr.label..), label.x=20, label.y=570,size=6)
summary(lm(annual_maximum~year))
gev.diag(nstat)
plot(year,annual_maximum,type='l')
abline(a=289,b=0.29)
abline(lm(annual_maximum~year),col='blue')
plot(year,annual_maximum,type='l')
abline(a=289,b=0.29,col='red')
abline(lm(annual_maximum~year),col='blue')
length(annual_maximum)
data(venice)
head(venice)
venice.max = venice[,2]
plot(venice.max)
plot(venice.max,type='l')
length(venice.max)
summary(lm(venice.max~y))
y = c(1:51)
summary(lm(venice.max~y))
abline(lm(venice.max~y))
plot(venice.max,type='l')
abline(lm(venice.max~y))
library(evd)
year<-c(1:73)
evd<-fgev(annual_maximum,nsloc=year)
evd
nstat<-gev.fit(annual_maximum,ydat=ti,mul=1)
summary(lm(annual_maximum~year))
summary(lm(annual_maximum~year))
nstat<-gev.fit(annual_maximum,ydat=ti,mul=1)
venice.max = venice[,2]
plot(venice.max,type='l')
abline(lm(venice.max~y))
summary(lm(venice.max~y))
ti[,2]<-seq(1,73,1)
nstat<-gev.fit(annual_maximum,ydat=ti,mul=1,sigl=2)
#Non-Stationary model
ti<-matrix(ncol=1, nrow=73)
#Non-Stationary model
ti<-matrix(ncol=2, nrow=73)
ti[,1]<-seq(1,73,1)
ti[,2]<-seq(1,73,1)
nstat<-gev.fit(annual_maximum,ydat=ti,mul=1,sigl=2)
gev.diag(nstat)
plot(year,annual_maximum,type='l')
abline(a=289,b=0.43,col='red')
abline(lm(annual_maximum~year),col='blue')
#Non-Stationary model
ti<-matrix(ncol=2, nrow=73)
ti[,1]<-seq(1,73,1) #mu
ti[,2]<-seq(1,73,1) #variance
nstat<-gev.fit(annual_maximum,ydat=ti,mul=1,sigl=2)
summary(lm(annual_maximum~year))
curve(dgev(x,0,1,0))
curve(dgev(x,0,1,1))
curve(dgev(x,0,1,0.5))
?dgev
curve(dgev(-3:10,0,1,0.5))
curve(dgev(c(-3:10),0,1,0.5))
curve(dgev(x,0,1,0.5),xlim=c(-3,5))
curve(dgev(x,0,1,0.8),xlim=c(-3,5))
curve(dgev(x,0,1,0.5),xlim=c(-3,5))
lines(dgev(x,0,1,0.8),xlim=c(-3,5),col='red')
curve(dgev(x,0,1,0.8),xlim=c(-3,5),col='red')
curve(dgev(x,0,1,0.5),xlim=c(-3,5))
lines(dgev(x,0,1,0.8),xlim=c(-3,5),col='red',add=TRUE)
curve(dgev(x,0,1,0.5),xlim=c(-3,5))
lines(dgev(c(-3,5),0,1,0.8),col='red',add=TRUE)
one = rgev(500,0,1,0.5)
two = rgev(500,0,1,0.8)
plot(density(one))
lines(density(two),col='red')
one = rgev(100,0,1,0.5)
two = rgev(100,0,1,0.8)
plot(density(one))
lines(density(two),col='red')
one = rgev(50,0,1,0.5)
two = rgev(50,0,1,0.8)
plot(density(one))
lines(density(two),col='red')
one = rgev(50,0,1,0.5)
two = rgev(50,0,1,0.8)
plot(dgev(one))
lines(dgev(two),col='red')
plot(dgev(sort(one)))
one = rgev(50,0,1,0.5)
two = rgev(50,0,1,0.8)
plot(dgev(sort(one)))
one = rgev(500,0,1,0.5)
two = rgev(500,0,1,0.8)
plot(dgev(sort(one)),type='l')
lines(dgev(sort(two)),col='red')
plot(dgev(sort(one),0,1,0.5),type='l')
one = rgev(500,0,1,0.5)
two = rgev(500,0,1,0.8)
plot(dgev(sort(one),0,1,0.5),type='l')
lines(dgev(sort(two),0,1,0.8),col='red')
one = rgev(5000,0,1,0.5)
two = rgev(5000,0,1,0.8)
plot(dgev(sort(one),0,1,0.5),type='l')
lines(dgev(sort(two),0,1,0.8),col='red')
plot(dgev(sort(one),0,1,0.5),type='l',ylim=c(0,max(one,two)))
lines(dgev(sort(two),0,1,0.8),col='red')
plot(dgev(sort(one),0,1,0.5),type='l',ylim=c(0,1))
lines(dgev(sort(two),0,1,0.8),col='red')
one = rgev(50000,0,1,0.5)
two = rgev(50000,0,1,1.5)
plot(dgev(sort(one),0,1,0.5),type='l',ylim=c(0,1))
lines(dgev(sort(two),0,1,1.5),col='red')
#Non-Stationary model
ti<-matrix(ncol=2, nrow=73)
ti[,1]<-seq(1,73,1) #mu
ti[,2]<-seq(1,73,1)^2 #variance
nstat<-gev.fit(annual_maximum,ydat=ti,mul=1,sigl=2)
gev.diag(nstat)
seq(1,5,1)^2
#Non-Stationary model
ti<-matrix(ncol=2, nrow=73)
ti[,1]<-seq(1,73,1) #mu
ti[,2]<-exp(seq(1,73,1)) #variance
nstat<-gev.fit(annual_maximum,ydat=ti,mul=1,sigl=2)
#Non-Stationary model
ti<-matrix(ncol=2, nrow=73)
ti[,1]<-seq(1,73,1) #mu
ti[,2]<-seq(1,73,1) #variance
nstat<-gev.fit(annual_maximum,ydat=ti,mul=1,sigl=2)
gev.diag(nstat)
#Stationary model
stat<-gev.fit(annual_maximum,ydat=NULL)
gev.diag(stat)
#Non-Stationary model
ti<-matrix(ncol=2, nrow=73)
ti[,1]<-seq(1,73,1) #mu
# ti[,2]<-seq(1,73,1) #variance
nstat<-gev.fit(annual_maximum,ydat=ti,mul=1)
gev.diag(nstat)
pchisq(0.95,1)
pchisq(0.05,1)
pchisq(0.05,2)
pchisq(0.95,2)
pchisq(0.95,1)
pnorm(0.5,0,1)
pnorm(1,0,1)
qnorm(1,0,1)
qnorm(0.5,0,1)
qchisq(0.95,1)
?pnorm()
qchisq(0.95,1)
#Non-Stationary model
ti<-matrix(ncol=2, nrow=73)
ti[,1]<-seq(1,73,1) #mu
ti[,2]<-seq(1,73,1)^2 #variance
nstat<-gev.fit(annual_maximum,ydat=ti,mul=c(1,2))
gev.diag(nstat)
nstat<-gev.fit(annual_maximum,ydat=ti,sigl=c(1,2))
nstat<-gev.fit(annual_maximum,ydat=ti,sigl=c(1))
#Non-Stationary model
ti<-matrix(ncol=2, nrow=73)
ti[,1]<-seq(1,73,1)^0.5 #mu
ti[,2]<-seq(1,73,1)^ #variance
nstat<-gev.fit(annual_maximum,ydat=ti,sigl=c(1))
gev.diag(nstat)
npot<-gpd.fit(annual_maximum,threshold = 204)
npot<-gpd.fit(values,threshold = 204)
length(values)
gpd.diag(npot)
gpd.diag(npot)
#POT non-stationary
t<-matrix(ncol=1,nrow=26663)
t[,1]<-seq(1,26663,1)
npot<-gpd.fit(values,threshold = 204,ydat=t,sigl=1,siglink='exp')
npot<-gpd.fit(values,threshold = 204,ydat=t,sigl=1,siglink="exp")
?gpd.fit()
npot<-gpd.fit(values,threshold = 204,ydat=t,sigl=1,siglink=exp)
#POT stationary
spot<-gpd.fit(values,threshold = 204)
gpd.diag(spot)
gpd.diag(npot)
npot<-gpd.fit(values,threshold = 204,ydat=t,sigl=1,siglink=identity)
gpd.diag(npot)
#POT stationary
spot<-gpd.fit(values,threshold = 204)
npot<-gpd.fit(values,threshold = 204,ydat=t,sigl=1,siglink=identity)
qchisq(0.95,1)
?gpd.fit
#POT non-stationary
t<-matrix(ncol=1,nrow=26663)
t[,1]<-seq(1,26663,1)
npot<-gpd.fit(values,threshold = 204,ydat=t,sigl=1,siglink=exp)
gpd.diag(npot)
npot<-gpd.fit(values,threshold = 300,ydat=t,sigl=1,siglink=exp)
gpd.diag(npot)
npot<-gpd.fit(values,threshold = 250,ydat=t,sigl=1,siglink=exp)
gpd.diag(npot)
npot<-gpd.fit(values,threshold = 210,ydat=t,sigl=1,siglink=exp)
gpd.diag(npot)
npot<-gpd.fit(values,threshold = 204,ydat=t,sigl=1,siglink=exp)
gpd.diag(npot)
npot<-gpd.fit(values,threshold = 205,ydat=t,sigl=1,siglink=exp)
gpd.diag(npot)
npot<-gpd.fit(values,threshold = 204,ydat=t,sigl=1,siglink=exp)
gpd.diag(npot)
#POT non-stationary
t<-matrix(ncol=1,nrow=26663)
t[,1]<-seq(1,26663,1)
npot<-gpd.fit(values,threshold = 205,ydat=t,sigl=1,siglink=exp)
gpd.diag(npot)
npot<-gpd.fit(values,threshold = 204.5,ydat=t,sigl=1,siglink=exp)
gpd.diag(npot)
npot<-gpd.fit(values,threshold = 203,ydat=t,sigl=1,siglink=exp)
gpd.diag(npot)
npot<-gpd.fit(values,threshold = 190,ydat=t,sigl=1,siglink=exp)
gpd.diag(npot)
npot<-gpd.fit(values,threshold = 200,ydat=t,sigl=1,siglink=exp)
gpd.diag(npot)
npot<-gpd.fit(values,threshold = 204,ydat=t,sigl=1,siglink=exp)
gpd.diag(npot)
npot<-gpd.fit(values,threshold = 205,ydat=t,sigl=1,siglink=exp)
gpd.diag(npot)
#Non-Stationary model 1
ti<-matrix(ncol=2, nrow=73)
ti[,1]<-seq(1,73,1)^0.5 #mu
ti[,2]<-seq(1,73,1)^ #variance
nbm<-gev.fit(annual_maximum,ydat=ti,sigl=c(1))
gev.diag(nbm)
#Non-Stationary model 1
ti<-matrix(ncol=2, nrow=73)
ti[,1]<-seq(1,73,1)^0.5 #mu
ti[,2]<-seq(1,73,1)^ #variance
nbm<-gev.fit(annual_maximum,ydat=ti,sigl=c(1))
gev.diag(nbm)
ti[,2]<-seq(1,73,1)^ #variance
nbm<-gev.fit(annual_maximum,ydat=ti,sigl=c(1))
gev.diag(nbm)
# ti[,2]<-seq(1,73,1)^ #variance
nbm<-gev.fit(annual_maximum,ydat=ti,mul=1)
gev.diag(nbm)
#Return level expression for GEV(n:
Z = function(t,r){
return(283 + 2.87*t) + (46.031/0.114)*(((-log(1-1/r))^(-0.114))-1)
}
time=seq(1:73,1)
r=seq(1:100,1)
time=seq(1,73,1)
r=seq(1,100,1)
plot(x=time, y=Z(time,r))
data(rain)
View(rain)
head(rain)
length(rain)
152/length(rain)
#POT non-stationary
t<-matrix(ncol=1,nrow=26663)
t[,1]<-seq(1,26663,1)
#POT stationary
spot<-gpd.fit(values,threshold = 205)
gpd.diag(spot)
495/26663
install.packages('extRemes')
library(extRemes)
?fevd()
f<-fevd(values,threshold=205)
f
plot(f)
plot(f)
f<-fevd(values,threshold=205,type=c('GP'))
f
plot(f)
gpd.diag(spot)
#POT stationary
spot<-gpd.fit(values,threshold = 205)
f<-fevd(values,threshold=204,type=c('GP'))
f
plot(f)
plot(f)
f<-fevd(values,threshold=205,scale.fun=~t[,1],type=c('GP'))
f
plot(f)
